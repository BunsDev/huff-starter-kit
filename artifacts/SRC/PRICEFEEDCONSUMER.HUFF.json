{
  "file": {
    "path": "src/PriceFeedConsumer.huff",
    "source": "// SPDX-License-Identifier: MIT\n\n/* Interface */\n#define function getPriceFeedAddress() view returns (address)\n#define function getLatestPrice() view returns (int256)\n\n/* Overriden Constants */\n#define constant PRICE_FEED_ADDRESS = 0x0000000000000000000000000000000000000001 // Will be overrided at deploy time\n\n/* Macrocs (Functions) */\n#define macro GET_PRICE_FEED_ADDRESS() = takes (0) returns (0) {\n    // store PRICE_FEED_ADDRESS in memory\n    [PRICE_FEED_ADDRESS] 0x00 mstore\n    // Return it\n    0x20 0x00 return\n}\n\n#define macro GET_LATEST_PRICE() = takes (0) returns (0) {\n    // store the function to call in memory\n    __FUNC_SIG(\"latestRoundData()\") 0x00 mstore \n\n    // return size = 0x20\n    // return offset = 0x00\n    // arguments size = 0x04 (function selector size)\n    // arguments offset = 0x00\n    // address = PRICE_FEED_ADDRESS\n    // gas = whatever gas is left = gas\n    // staticcall calls our PRICE_FEED_ADDRESS contract \n    0x20 0x00 0x04 0x00 [PRICE_FEED_ADDRESS] gas staticcall \n\n    // size = 0x20\n    // return data offset = 0x00\n    // destination in memory offset = 0x00\n    0x20 0x00 0x00 returndatacopy\n\n    0x20 0x00 return\n}\n\n\n#define macro MAIN() = takes (0) returns (0) {\n    // Identify which function is being called.\n    0x00 calldataload 0xE0 shr\n\n    // We tell our code where to go based on the function selector\n    // 0x0f0f30b2 is the function selector of `getPriceFeedAddress`\n    // We can know that by running `forge inspect PriceFeedConsumer methods` on the solidity edition\n    dup1 0x0f0f30b2 eq getPriceFeedAddress jumpi \n\n    // We could also use __FUNC_SIG(getLatestPrice) to get the function selector 0x8e15f473\n    dup1 0x8e15f473 eq getLatestPrice jumpi\n\n    getPriceFeedAddress:\n        GET_PRICE_FEED_ADDRESS()\n    \n    getLatestPrice:\n        GET_LATEST_PRICE()\n}",
    "access": null,
    "dependencies": []
  },
  "bytecode": "60488060093d393df360003560e01c80630f0f30b21461001c5780638e15f47314610027575b600160005260206000f35b63feaf968c600052602060006004600060015afa6020600060003e60206000f3",
  "runtime": "60003560e01c80630f0f30b21461001c5780638e15f47314610027575b600160005260206000f35b63feaf968c600052602060006004600060015afa6020600060003e60206000f3",
  "abi": {
    "constructor": null,
    "functions": {
      "getLatestPrice": {
        "name": "getLatestPrice",
        "inputs": [],
        "outputs": [
          {
            "name": "",
            "kind": {
              "Int": 256
            },
            "internal_type": null
          }
        ],
        "constant": false,
        "state_mutability": "View"
      },
      "getPriceFeedAddress": {
        "name": "getPriceFeedAddress",
        "inputs": [],
        "outputs": [
          {
            "name": "",
            "kind": "Address",
            "internal_type": null
          }
        ],
        "constant": false,
        "state_mutability": "View"
      }
    },
    "events": {},
    "errors": {},
    "receive": false,
    "fallback": false
  }
}